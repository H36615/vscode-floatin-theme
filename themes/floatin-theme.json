{
  "$schema": "vscode://schemas/color-theme",
  "name": "Floatin Theme",
  "type": "dark",
  "colors": {
    "editor.background": "#181818",
    "editor.foreground": "#adadad",
    "sideBar.background": "#1d1d1d",
    "activityBar.background": "#181818",
    "activityBarBadge.background": "#65eaf3",
    "activityBarBadge.foreground": "#000000",
    "sideBarTitle.foreground": "#bbbbbb"
  },
  "tokenColors": [
    {
      "name": "",
      "scope": [
        // (public, class, const, implements, extends, new)
        "storage",
        
        // (new)
        "keyword.operator.new",

        // Property name (.json: "key")
        "support.type.property-name",
      ],
      "settings": {
        "foreground": "#6b91b1"
      }
    },
    {
      "name": "",
      "scope": [
        // (return, export, import)
        "keyword.control",

        // Copied
        // "source.cpp keyword.operator.new",
        // "keyword.operator.delete",
        // "keyword.other.using",
        // "keyword.other.operator",
        // "entity.name.operator"
      ],
      "settings": {
        "foreground": "#6093a7" // was same as semanticTokenColors.newOperator
      }
    },
    {
			"name": "",
			"scope": [
        // Comment
				"comment",
			],
			"settings": {
				"foreground": "#7a7a7a"
			}
		},
    {
      "name": "",
      "scope": [
        // Function & method names
        "entity.name.function",

        // Copied
        // "support.function",
        // "support.constant.handlebars",
        // "source.powershell variable.other.member",
        // "entity.name.operator.custom-literal", // See https://en.cppreference.com/w/cpp/language/user_literal

        // Copied
        // "keyword.operator.or.regexp", "keyword.control.anchor.regexp"
      ],
      "settings": { // ffb07c
        "foreground": "#f7b284" // was same as semanticTokenColors.customLiteral
      }
    },
    {
      "name": "",
      "scope": [
        // Type ("IPerson")
        "entity.name",

        // ("Error")
        "support",
        
        // Class (MyUtils.)
        "entity.name.class"

        // Copied
        // "meta.return-type",
        // "support.type",
        // "support.class",
        // "entity.name.type",
        // "entity.name.namespace",
        // "entity.other.attribute",
        // "entity.name.scope-resolution",
        // "entity.name.class",
        // "storage.type.numeric.go",
        // "storage.type.byte.go",
        // "storage.type.boolean.go",
        // "storage.type.string.go",
        // "storage.type.uintptr.go",
        // "storage.type.error.go",
        // "storage.type.rune.go",
        // "storage.type.cs",
        // "storage.type.generic.cs",
        // "storage.type.modifier.cs",
        // "storage.type.variable.cs",
        // "storage.type.annotation.java",
        // "storage.type.generic.java",
        // "storage.type.java",
        // "storage.type.object.array.java",
        // "storage.type.primitive.array.java",
        // "storage.type.primitive.java",
        // "storage.type.token.java",
        // "storage.type.groovy",
        // "storage.type.annotation.groovy",
        // "storage.type.parameters.groovy",
        // "storage.type.generic.groovy",
        // "storage.type.object.array.groovsy",
        // "storage.type.primitive.array.groovy",
        // "storage.type.primitive.groovy",

        // Copied
        // "meta.type.cast.expr",
        // "meta.type.new.expr",
        // "support.constant.math",
        // "support.constant.dom",
        // "support.constant.json",
        // "entity.other.inherited-class",
      ],
      "settings": {
        "foreground": "#ff7c7c"
      }
    },
    {
      "name": "Variable, parameter. Object keys.",
      "scope": [
        // variable
        "variable",
        
        // property
        "meta.object-literal.key",

        // Copied
        // "meta.definition.variable.name",
        // "support.variable",
        // "entity.name.variable",
        // "constant.other.placeholder", // placeholders in strings
      ],
      "settings": {
        "foreground": "#e0e0e0" // TODO blend with main foreground?
      }
    },
    {
      "name": "CSS property value. Regular expression groups.",
      "scope": [
        // String
        "string",

        // (undefined)
        "constant.language"
        
        // Copied
        // "support.constant.property-value",
        // "support.constant.font-name",
        // "support.constant.media-type",
        // "support.constant.media",
        // "constant.other.color.rgb-value",
        // "constant.other.rgb-value",
        // "support.constant.color",

        // Copied
        // "punctuation.definition.group.regexp",
        // "punctuation.definition.group.assertion.regexp",
        // "punctuation.definition.character-class.regexp",
        // "punctuation.character.set.begin.regexp",
        // "punctuation.character.set.end.regexp",
        // "keyword.operator.negation.regexp",
        // "support.other.parenthesis.regexp",
      ],
      "settings": {
        "foreground": "#65eaf3" // was same as semanticTokenColors.stringLiteral
      }
    },
    
    // Copied
    // {
    //   "scope": [
    //     "constant.character.character-class.regexp",
    //     "constant.other.character-class.set.regexp",
    //     "constant.other.character-class.regexp",
    //     "constant.character.set.regexp"
    //   ],
    //   "settings": {
    //     "foreground": "#d16969"
    //   }
    // },

    // Copied
    // {
    //   "name": "",
    //   "scope": [
    //     "keyword.operator.quantifier.regexp",

    //     "constant.character.escape",
    //   ],
    //   "settings": {
    //     "foreground": "#00ff00"
    //   }
    // },
    
    // Copied
    // {
    //   "scope": "constant.character",
    //   "settings": {
    //     "foreground": "#569cd6"
    //   }
    // },

    // Copied
    // {
    //   "scope": "entity.name.label",
    //   "settings": {
    //     "foreground": "#C8C8C8"
    //   }
    // }
  ],
  "semanticHighlighting": true,
  // Copied
  // "semanticTokenColors": {
  //   "newOperator": "#C586C0",
  //   "stringLiteral": "#ce9178",
  //   "customLiteral": "#DCDCAA",
  //   "numberLiteral": "#b5cea8",
  // }
}
